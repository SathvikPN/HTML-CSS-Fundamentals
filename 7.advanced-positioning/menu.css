* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  body {
    height: 1200px;
    font-size: 18px;
    font-family: sans-serif;
    color: #5D6063;
  }
  
  a:link,
  a:visited {
    color: #5D6063;
    text-decoration: none;
  }
  a:hover {
    text-decoration: underline;
  }
  
  .header {
    position: fixed; /* always stays on window irrespective of scroll*/
    display: flex;
    justify-content: space-between;
    
    width: 100%;
    padding: 50px;
    background: #D6E9FE;
  }
 /* ---------------------------- */
  .menu {
    margin-top: 15px;
  }
  
  .menu > li {
    display: inline;
    margin-right: 50px;
  }
  
  .menu > li:last-of-type {
    margin-right: 0;
  }
 /* We have to use child selectors here instead of descendant selectors 
 because we only want to select <li> elements that are directly inside the .menu 
 This will become important once we add 
 our submenu, which has its own <li> elements that we don’t want to style with this rule. 
 This snippet also adds margins to all the list items, but removes it from the 
 final <li> using the :last-of-type pseudo-class. This is a pretty common 
 technique for creating margins between items.*/

 .features-menu { 
    display: flex;                    
    flex-direction: column;
    background: #B2D6FF;
    border-radius: 5px;
    padding-top: 60px;

    position: absolute;      /* Add these */
    top: -25px;
    left: -30px;

    z-index: 1;

    display: none;
  }
  
  .features-menu li {
    list-style: none;
    border-bottom: 1px solid #FFF;
  
    padding: 0 40px 10px 20px;
    margin: 10px;
  }
  
  .features-menu li:last-of-type {
    border-bottom: none;
  }

  .dropdown {
    position: relative;
  }
  .dropdown > span {
    z-index: 2;
    position: relative;  /* This is important! */
    cursor: pointer; /*change cursor look!!*/
  }
  /*Take note of that position: relative; line. 
  It’s required because only positioned elements 
  pay attention to their z-index property.
  remember when stuck with depth issues */

  .dropdown:hover .features-menu {    /* This used to be `.features-menu` */
    display: flex;                    /* Leave everything else alone */
    flex-direction: column;
    background: #B2D6FF;
    border-radius: 5px;
    padding-top: 60px;

    position: absolute;      /* Add these */
    top: -25px;
    left: -30px;

    z-index: 1;
  }


  /* Summary
  Relative positioning was for tweaking the position of an element 
  without affecting its surrounding boxes. Absolute positioning took 
  elements out of the static flow of the page and placed them relative 
  to the browser window, while relatively absolute positioning allowed 
  us to hook back into the static flow of the page. Finally, 
  fixed positioning let us make elements that didn't scroll with 
  the rest of the page.*/


